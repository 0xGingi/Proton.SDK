<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>$(NativeLibPrefix)proton_drive_sdk</AssemblyName>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PublishAot>true</PublishAot>
    <TrimmerSingleWarn>false</TrimmerSingleWarn>
    <NativeCryptoLibName>proton_crypto</NativeCryptoLibName>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Proton.Sdk.CExports\Proton.Sdk.CExports.csproj" />
    <ProjectReference Include="..\Proton.Sdk.Drive\Proton.Sdk.Drive.csproj" />
    <ProjectReference Include="..\Proton.Sdk.Instrumentation.CExport\Proton.Sdk.Instrumentation.CExport.csproj" />
  </ItemGroup>

  <ItemGroup>
    <IlcCompileInput Include="$(OutputPath)\$(NativeLibPrefix)proton_sdk.dll" />
    <IlcCompileInput Include="$(OutputPath)\$(NativeLibPrefix)proton_instrumentation_sdk.dll" />
  </ItemGroup>

  <!-- Static-link the crypto library unless targeting Android -->
  <ItemGroup Condition="!$(RuntimeIdentifier.StartsWith('linux-bionic'))">
    <!-- While the project does not use the package directly, the path to the package is needed to refer to the static link library -->
    <PackageReference Include="Proton.Cryptography" GeneratePathProperty="true" />

    <DirectPInvoke Include="$(NativeCryptoLibName)" />
    <NativeLibrary Include="$(PkgProton_Cryptography)\runtimes\$(RuntimeIdentifier)\native\$(NativeLibPrefix)$(NativeCryptoLibName)$(LibFileExt)" />
  </ItemGroup>

  <!-- If targeting Android, add the required SONAME to the output library -->
  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('linux-bionic'))">
    <LinkerArg Include="-Wl,-soname,$(TargetName)$(NativeBinaryExt)" />
  </ItemGroup>

</Project>
